"use strict";(self.webpackChunkapp_DSLearnerNotes=self.webpackChunkapp_DSLearnerNotes||[]).push([[384],{384:(d,s,a)=>{a.r(s),a.d(s,{PythonModule:()=>c});var u=a(808),l=a(895),e=a(223);const i=[{path:"",children:[{path:"data-types",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(o){return new(o||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-data-types"]],decls:62,vars:0,template:function(o,p){1&o&&(e.TgZ(0,"h2"),e._uU(1,"Data Types in Python:"),e.qZA(),e._UZ(2,"br"),e.TgZ(3,"p"),e._uU(4," All data in python are objects. These objetcs have an identity, type and value. For the most of them type and identity are fixed, but for some, its value is variable and we can clasify objects in mutable and inmutable.\n"),e.qZA(),e.TgZ(5,"h5"),e._uU(6,"Number:"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"Python distinguishes numerical values between integers, floating point and complex. There are two types of integers:"),e.qZA(),e.TgZ(9,"ul"),e.TgZ(10,"li"),e._uU(11," Integers (int): "),e.qZA(),e.TgZ(12,"li"),e._uU(13," Booleans (bool): "),e.qZA(),e.qZA(),e.TgZ(14,"p"),e._uU(15,"Los n\xfameros flotantes son tambi\xe9n llamados n\xfameros reales:"),e.qZA(),e.TgZ(16,"ul"),e.TgZ(17,"li"),e._uU(18," Real (float): "),e.qZA(),e.qZA(),e.TgZ(19,"p"),e._uU(20,"En contraparte a los n\xfameros imaginarios o complejos:"),e.qZA(),e.TgZ(21,"ul"),e.TgZ(22,"li"),e._uU(23," Complex (complex): "),e.qZA(),e.qZA(),e.TgZ(24,"h5"),e._uU(25,"Sequences:"),e.qZA(),e.TgZ(26,"p"),e._uU(27,"Sequences store indexed items. It's possible to know the amount of elements of a Sequence using\nthe function len(). The following type of data are inmutable, this mean that once they've been created,\nits items can't be changed:"),e.qZA(),e.TgZ(28,"ul"),e.TgZ(29,"li"),e._uU(30," String (str) "),e.qZA(),e.TgZ(31,"li"),e._uU(32," Touples (tuple) "),e.qZA(),e.TgZ(33,"li"),e._uU(34," Bytes (byte) "),e.qZA(),e.qZA(),e.TgZ(35,"p"),e._uU(36,"However, the following types are mutables:"),e.qZA(),e.TgZ(37,"ul"),e.TgZ(38,"li"),e._uU(39," List (list) "),e.qZA(),e.TgZ(40,"li"),e._uU(41," Bytes array (bytearray) "),e.qZA(),e.qZA(),e.TgZ(42,"p"),e._uU(43," Se puede acceder a los elementos de todos estos datos secuenciales. Estos elementos est\xe1n numerados desde 0 hasta n-1, donde n es la cantidad de elementos. Con esta numeraci\xf3n podemos acceder a los elementos usando []. Por ejemplo, si queremos acceder al primer elemento del dato secuencia a, accedemos a \xe9l usando a[0]. Los elementos no tienen numeraci\xf3n negativa, sin embargo, al intentar acceder a un elemento indic\xe1ndolo como negativo, Python numerar\xe1 en sentido inverso. As\xed, el elemento -1 ser\xe1 el \xfaltimo elemento. Tambi\xe9n se puede tomar una secci\xf3n de datos de la forma a[i:j]. Esto toma todos los elementos desde i, pero no alcanza a tomar el elemento j.\n"),e.qZA(),e.TgZ(44,"p"),e._uU(45," Algunas secuencias permiten tomar elementos con un paso intermedio entre ellos de la forma a[i:j:k], donde k es el paso. Por ejemplo, se pueden tomar los elementos pares de 0 a 10 de la esta forma: a[0:10:2]. Esto tomar\xe1 a los elementos 0, 2, 4, 6 y 8.\n"),e.qZA(),e.TgZ(46,"h5"),e._uU(47,"Conjuntos:"),e.qZA(),e.TgZ(48,"p"),e._uU(49,"Estos contienen elementos que son \xfanicos entre ellos. Estos elementos no tienen un orden en particular y por esto no es posible acceder a alguno de ellos indicando su numeraci\xf3n. Con ellos se pueden realizar operaciones matem\xe1ticas, como lo es la uni\xf3n, la intersecci\xf3n, diferencia y diferencia sim\xe9trica. Para a\xf1adir un elemento a un conjunto mutable se usa el m\xe9todo add().\n"),e.qZA(),e.TgZ(50,"ul"),e.TgZ(51,"li"),e._uU(52," Sets (set) "),e.qZA(),e.TgZ(53,"li"),e._uU(54," Sets congelados (frozenset) "),e.qZA(),e.qZA(),e.TgZ(55,"h5"),e._uU(56,"Mappings"),e.qZA(),e.TgZ(57,"p"),e._uU(58,"Estos representan un conjunto de datos con \xedndice arbitrario."),e.qZA(),e.TgZ(59,"ul"),e.TgZ(60,"li"),e._uU(61," Dictionary (dict) "),e.qZA(),e.qZA())},styles:[""]}),n})()},{path:"**",redirectTo:"data-types"}]}];let r=(()=>{class n{}return n.\u0275fac=function(o){return new(o||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[l.Bz.forChild(i)],l.Bz]}),n})(),c=(()=>{class n{}return n.\u0275fac=function(o){return new(o||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[u.ez,r]]}),n})()}}]);